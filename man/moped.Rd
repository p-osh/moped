% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moped.R
\name{moped}
\alias{moped}
\title{Fitting multivariate orthogonal polynomial based density estimation.}
\usage{
moped(
  Sample,
  K = rep(15, NCOL(Sample)),
  Distrib = rep("Uniform", NCOL(Sample)),
  bounds = NULL,
  ListP = FALSE,
  variance = TRUE,
  recurrence = FALSE,
  parallel = FALSE,
  ncores = NULL,
  mpo = TRUE
)
}
\arguments{
\item{Sample}{A data frame.}

\item{K}{Integer vector. Maximum Truncation of Approximation on each variable.}

\item{Distrib}{Character string, specifying the reference distribution to be
used. Choices are \code{"uniform"}, \code{"normal"}, \code{"gamma"} and \code{"beta"}
distributions.}

\item{bounds}{A data frame. The limits on the compact space. Should be a
array of 2 x number of variables with each column having the lower and
upper limit. \code{NULL} is the default.}

\item{ListP}{Logical. If \code{FALSE} (the default), the Pn-Array is calculated
for Coefficient Variance Calculations.}

\item{variance}{Logical. If \code{TRUE} (the default), a variance estimate of each
coefficient is calculated.}

\item{recurrence}{Logical. If \code{FALSE} (the default), recurrence relation is
not used to determine coefficient.}

\item{parallel}{Logical. If \code{FALSE} (the default), parallel computing is not
used.}

\item{ncores}{Integer vector. NCores to use in parallel computing.}

\item{mpo}{Logical. If \code{TRUE} (the default), an optimal MOP estimate is
calculated.}
}
\value{
\code{moped()} returns a list object.
}
\description{
\code{moped()} is used to fit multivariate orthogonal polynomial based density
estimation. It requires a data frame of bounds to fit on data. Categorical
variables need to be converted into continuous variables before fitting data
to the density estimation.
}
\examples{
Data_full <- ISLR::Wage
Data <- Data_full \%>\%
select(age, education, jobclass,wage)

# Convert Categorical Data to Continuous Data
Data_x <- make.cont(Data, catvar = 2:3)

# Fitting multivariate orthogonal polynomial based
# density estimation function
# Requires a data frame of bounds to fit on data.
bounds <- data.frame(
age  = c(18,80),
education = c(0,1),
jobclass = c(0,1),
wage = c(0,350)
)

Fitting the Data
Fit <- moped(
Data_x,
K=10,
Distrib = rep("Uniform", 7),
bounds = bounds,
variance = T,
recurrence = F,
parallel = F,
ncores = NULL,
mpo = T
)

# Maximum optimal MPO
Fit$MPO$opt.mpo

# check marginal densities with different polynomial K
marginal.plot(Fit)
marginal.plot(Fit, k.range = 3:8, ncol =3, prompt = FALSE)
}
