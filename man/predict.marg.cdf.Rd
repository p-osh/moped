% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.marg.cdf.R
\name{predict.marg.cdf}
\alias{predict.marg.cdf}
\title{Calculate univariate marginal distribution function probabilities.}
\usage{
\method{predict}{marg.cdf}(fit, X = NULL, K = NULL, nprobs = 1, variable = 1)
}
\arguments{
\item{fit}{moped type variable. Outputted from \code{moped()}.}

\item{X}{vector of values to predict the marginal probability. Not required
for variables with "Uniform" reference densities to compute coefficients.}

\item{K}{integer. Maximum Polynomial Order of approximation on marginal
variable. Must be less than or equal to the maximum MPO K specified in
\code{moped()}. The default is \code{opt_mpo} or \code{KMax} specified in \code{moped} object.}

\item{nprobs}{integer. Number of probability coefficients replications to be
outputted. Used when X is not specified for variables with "Uniform"
reference densities. The default value is 1.}

\item{variable}{integer or string of variable name. Which marginal variable
position or name to be predicted from \code{moped} object.}
}
\value{
\code{predict.marg.cdf()} returns a list with the following components:
\itemize{
\item \code{Prob} - vector of computed probabilities when X is specified.
\item \code{coef} - An array of coefficients of the polynomial approximation.
When variable reference density is "Uniform", coefficients
are not specific for each value of X.
}
}
\description{
\code{predict.marg.cdf()} is used to calculate univariate marginal cumulative
distribution function probabilities and the polynomial coefficients of the
polynomical approximation from any \code{moped} object.
}
\examples{
#' Data_full <- ISLR::Wage
Data <- Data_full \%>\%
select(age, education, jobclass,wage)

# Convert Categorical Data to Continuous Data
Data_x <- make.cont(Data, catvar = 2:3)

# Fitting multivariate orthogonal polynomial based
# density estimation function
# Requires a data frame of bounds to fit on data.
bounds <- data.frame(
age  = c(18,80),
education = c(0,1),
jobclass = c(0,1),
wage = c(0,350)
)

# Fitting the Data
Fit <- moped(
Data_x,
K=10,
Distrib = rep("Uniform", 4),
bounds = bounds,
variance = T,
recurrence = F,
parallel = F,
ncores = NULL,
mpo = F
)

# Compute marginal distribution function probabilities of "wage"
x <- seq(21,310,length.out = 100)

wage_prob <- predict.marg.cdf(Fit, X = x, K = 10, variable = "wage")

plot(x,wage_prob$Prob,type='l', main = "moped CDF of wage",
    xlab="Wage",ylab="Prob")
}
