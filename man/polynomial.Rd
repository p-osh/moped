% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polynomial.R
\name{polynomial}
\alias{polynomial}
\title{Computing MBD polynomials.}
\usage{
polynomial(fit, X = NULL, K = NULL, variables = NULL, bounds = NULL)
}
\arguments{
\item{fit}{MBDensity type variable. Outputed from \code{moped()}.}

\item{X}{Grid of probabilities to be calculated. If \code{NULL} (the default) than
generates nodes x Nv grid.}

\item{K}{K Integer vector. Maximum Truncation of Approximation on each
variable. The default is the maximum MPO Order in \code{moped} object.}

\item{variables}{Integer vector or character string. Variables to be
predicted from \code{moped} object. The default is 1:Nv or 1:NCOL(Sample)
whichever smallest.}

\item{bounds}{A data frame. Bounds allows you to control the grid min and max.
Should be an array of 2 x number of variables. \code{NULL} is the default.}
}
\value{
MBD polynomials from MBDensity type object.
}
\description{
Computing MBD polynomials.
}
\examples{
Data_full <- ISLR::Wage
Data <- Data_full \%>\%
select(age, education, jobclass,wage)

# Convert Categorical Data to Continuous Data
Data_x <- make.cont(Data, catvar = 2:3)

# Fitting multivariate orthogonal polynomial based
# density estimation function
# Requires a data frame of bounds to fit on data.
bounds <- data.frame(
age  = c(18,80),
education = c(0,1),
jobclass = c(0,1),
wage = c(0,350)
)

# Fitting the Data
Fit <- moped(
Data_x,
K=10,
Distrib = rep("Uniform", 7),
bounds = bounds,
variance = T,
recurrence = F,
parallel = F,
ncores = NULL,
mpo = T
)

# define the observation which the probability is desired.
x0 <- Data_x[1,]

# Manually Compute MBD Polynomials
polynomial(Fit, X=x0, K=7)
}
