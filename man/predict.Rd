% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict}
\alias{predict}
\title{Predicting the probability of an observation based on MBD Estimate}
\usage{
predict(
  fit,
  Sample = NULL,
  K = NULL,
  variables = NULL,
  bounds = NULL,
  normalise = T,
  nodes = 100,
  parallel = F,
  ncores = NULL,
  mps = 5000
)
}
\arguments{
\item{fit}{MBDensity Type Variable, outputed from \code{moped()}}

\item{Sample}{A data frame for which the probabilities to be calculated. If
\code{NULL} (the default) than generates nodes^Nv grid. Usually used to
calculate probability for a specific set of obs.}

\item{K}{Integer vector. Truncation to be used, the default is the maximum
MPO Order in \code{moped} object.}

\item{variables}{Integer vector or character string. Variables to be
predicted from \code{moped} object. The default is 1:Nv or 1:NCOL(Sample)
whichever smallest.}

\item{bounds}{A data frame. Bounds allows you to control the grid min and max.
Should be an array of 2 x number of variables. \code{NULL} is the default.}

\item{normalise}{Logical. If \code{TRUE} (the default). (?Brad)}

\item{nodes}{Integer vector. Nodes allows you to control how many grid points.}

\item{parallel}{Logical. If \code{FALSE} (the default), parallel computing is not
used.}

\item{ncores}{Integer vector. NCores to use in parallel computing.}

\item{mps}{Integer vector. The default is 5000. (?Brad)}
}
\value{
\code{predict()} returns a data frame.
}
\description{
\code{predict()} is used to predict marginal density for a set of observations.
When constructing partically joint density, sample and variables must be used
together. Sample must be a data frame and its variable length must equal to
the length in var.
}
\examples{
Data_full <- ISLR::Wage
Data <- Data_full \%>\%
select(age, education, jobclass,wage)

# Convert Categorical Data to Continuous Data
Data_x <- make.cont(Data, catvar = 2:3)

# Fitting multivariate orthogonal polynomial based
# density estimation function
# Requires a data frame of bounds to fit on data.
bounds <- data.frame(
age  = c(18,80),
education = c(0,1),
jobclass = c(0,1),
wage = c(0,350)
)

# Fitting the Data
Fit <- moped(
Data_x,
K=10,
Distrib = rep("Uniform", 7),
bounds = bounds,
variance = T,
recurrence = F,
parallel = F,
ncores = NULL,
mpo = T
)

# Define the observation which the probability is desired
x0 <- Data_x[1,]
pred <- predict(Fit, K= 7, Sample = x0)

# Predicting Marginal Density for a set of observations
# When constructing partically joint density, Sample and varaibles must be used together.
pred <- predict(Fit, K= 7, Sample= Data_x[,3:4] , variables =c("jobclass", "wage"))
pred <- predict(Fit, K= 7, Sample= Data_x[,4] , variables =c("wage"))
pred <- predict(Fit, K= 7, Sample= Data_x[,4] , variables =4 )
pred <- predict(Fit, K= c(2,7), Sample= Data_x[,3:4] , variables =c("jobclass","wage"))

# Plotting marginal density
predict(Fit, K= 7, variables =4) \%>\%
ggplot(aes(x=wage,y=Density)) +
geom_line()

# Plotting bivariate density plot
predict(Fit, K= c(2,7), variables =3:4) \%>\%
ggplot(aes(x=jobclass,y=wage,fill=Density)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
}
